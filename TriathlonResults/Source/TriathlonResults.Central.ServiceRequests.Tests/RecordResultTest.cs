// The following code was generated by Microsoft Visual Studio 2005.
// The test owner should check each test for validity.
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Text;
using System.Collections.Generic;
using TriathlonResults.Central.ServiceRequests;
using ESBSimpleSamples.ServiceClient.Itineraries;
using TriathlonResults.Central.ServiceRequests.Entities;
namespace TriathlonResults.Central.ServiceRequests.Tests
{
    /// <summary>
    ///This is a test class for TriathlonResults.Central.ServiceRequests.RecordResult and is intended
    ///to contain all TriathlonResults.Central.ServiceRequests.RecordResult Unit Tests
    ///</summary>
    [TestClass()]
    public class RecordResultTest
    {


        private TestContext testContextInstance;

        /// <summary>
        ///Gets or sets the test context which provides
        ///information about and functionality for the current test run.
        ///</summary>
        public TestContext TestContext
        {
            get
            {
                return testContextInstance;
            }
            set
            {
                testContextInstance = value;
            }
        }
        #region Additional test attributes
        // 
        //You can use the following additional attributes as you write your tests:
        //
        //Use ClassInitialize to run code before running the first test in the class
        //
        //[ClassInitialize()]
        //public static void MyClassInitialize(TestContext testContext)
        //{
        //}
        //
        //Use ClassCleanup to run code after all tests in a class have run
        //
        //[ClassCleanup()]
        //public static void MyClassCleanup()
        //{
        //}
        //
        //Use TestInitialize to run code before running each test
        //
        //[TestInitialize()]
        //public void MyTestInitialize()
        //{
        //}
        //
        //Use TestCleanup to run code after each test has run
        //
        //[TestCleanup()]
        //public void MyTestCleanup()
        //{
        //}
        //
        #endregion


        /// <summary>
        /// End-to-end test through ESB
        ///</summary>
        [TestMethod()]
        public void Response()
        {
            SectorTime result = new SectorTime();
            result.AthleteId = 2;
            result.RaceId = 2;
            result.SectorId = 2;
            result.StartTime = DateTime.Now.AddMinutes(new Random().Next(1, 30));
            result.EndTime = DateTime.Now;

            RecordResult target = new RecordResult();
            target.Request.result = result;

            RecordResultResponse actual = target.Response;
            Assert.AreEqual(true, actual.RecordResultResult);
        }
    }
}
